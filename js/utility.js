// Generated by CoffeeScript 1.7.1
var addThisMenuToKitchen, addThisRecipeToKitchen, convertTimeToSeconds, createNewMenu, deleteSelectedRecipes, findChosenRecipeId, kitchenMenuAjaxd, kitchenRecipesAjaxd, loadPopularMenus, loadPopularRecipes, menuAjaxd, parseSecondsToTime, parseTimeToMinutes, recipeAjaxd, reloadKitchenMenus, reloadKitchenRecipes, resetSelectedRecipe, resetUtilBtn, utilityDetect, utilityEdit, utilityTrash;

$(document).ready(function() {
  loadPopularRecipes();
  loadPopularMenus();
  $('body').find('.popup_btn').forEach(function(elem) {
    $(elem).click(function() {
      return utilityDetect(this);
    });
  });
  resetUtilBtn();
});

utilityDetect = function(elem) {
  console.log('Popup #' + elem.id);
  switch (elem.getAttribute('data-function')) {
    case 'edit':
      $('#popup_btn_trash').removeClass('selected');
      $(elem).toggleClass('selected');
      if ($(elem).hasClass('selected')) {
        utilityEdit();
      } else {
        resetUtilBtn();
      }
      break;
    case 'trash':
      $('#popup_btn_edit').removeClass('selected');
      $(elem).toggleClass('selected');
      if ($(elem).hasClass('selected')) {
        utilityTrash();
      } else {
        resetUtilBtn();
      }
      break;
    default:
      break;
  }
};

resetUtilBtn = function() {
  var utilBtn;
  $('#main_Kitchen_Recipes').find('.selected').removeClass('selected');
  utilBtn = $('#kitchenUtilityBtn');
  $('body').find('.popup_btn').removeClass('selected');
  utilBtn.removeClass('trash');
  utilBtn.removeClass('edit');
  utilBtn.unbind('click');
  utilBtn.bind('click', function() {
    return $(".popup_btn").toggle();
  });
  utilBtn.html('Tap on the Cog to begin.');
  return window.mode = 0;
};

utilityEdit = function() {
  var utilBtn;
  console.log('popup edit');
  window.mode = 1;
  utilBtn = $('#kitchenUtilityBtn');
  utilBtn.removeClass('trash');
  utilBtn.addClass('edit');
  utilBtn.html('Start Cooking.');
  utilBtn.unbind('click');
  utilBtn.click(function() {
    var selectedId;
    selectedId = findChosenRecipeId();
    if (selectedId.length === 0) {
      return;
    }
    return $.ui.popup({
      title: '為Menu命名',
      message: '<input id="popupBoxInputTitle" type="text"><label>公開</label><input id="popupBoxInputPrivacy" type="checkbox" class="toggle"><label for="popupBoxInputPrivacy" data-on="私密" data-off="公開"><span></span></label><br>',
      cancelText: "Cancel",
      cancelCallback: function() {
        console.log("cancelled");
      },
      doneText: "Done",
      doneCallback: function(elem) {
        var isPrivate, listTitle;
        console.log("Done for!");
        listTitle = $(elem.container).find("#popupBoxInputTitle")[0].value;
        isPrivate = $(elem.container).find("#popupboxInputPrivacy")[0].checked;
        createNewMenu(selectedId, listTitle, isPrivate);
      },
      cancelOnly: false
    });
  });
};

utilityTrash = function() {
  var utilBtn;
  console.log('popup trash');
  window.mode = 1;
  utilBtn = $('#kitchenUtilityBtn');
  utilBtn.removeClass('edit');
  utilBtn.addClass('trash');
  utilBtn.html('Delete selected recipe.');
  utilBtn.unbind('click');
  utilBtn.click(function() {
    return deleteSelectedRecipes();
  });
};

deleteSelectedRecipes = function() {
  var ans, data, selectedId;
  selectedId = findChosenRecipeId();
  if (selectedId.length === 0) {
    return;
  }
  console.log("deleting recipes " + selectedId);
  ans = confirm("Deleteing recipes from Kitchen. Are you sure?");
  if (ans === false) {
    return;
  }
  data = {
    'type': 'recipe',
    'recipes': selectedId,
    'user_id': window.user_id,
    'token': window.token
  };
  data = JSON.stringify(data);
  console.log(data);
  return $.ajax({
    type: 'DELETE',
    url: 'http://54.178.135.71:8080/CookIEServer/favorite',
    dataType: 'application/json',
    data: data,
    timeout: 10000,
    success: function(data) {
      console.log("[SUCCESS] deleting recipes #" + selectedId);
      console.log(data);
      reloadKitchenRecipes();
    },
    error: function(data, status) {
      console.log("[ERROR] deleting recipes #" + selectedId);
      console.log(data);
    }
  });
};

kitchenRecipesAjaxd = 0;

reloadKitchenRecipes = function() {
  var scope;
  scope = $("#main_Kitchen_Recipes");
  scope.find("#Results").html("");
  scope.find("#infinite").text("Reloading...");
  kitchenRecipesAjaxd = 0;
  getKitchenRecipes(kitchenRecipesAjaxd);
};

kitchenMenuAjaxd = 0;

reloadKitchenMenus = function() {
  var scope;
  scope = $("#main_Kitchen_Menus");
  scope.find('#Results').html("");
  scope.find("#infinite").text("Reloading...");
  kitchenMenuAjaxd = 0;
  getKitchenMenus(kitchenMenuAjaxd);
};

recipeAjaxd = 0;

loadPopularRecipes = function() {
  var scope;
  scope = $('#main_Popular_Recipes');
  scope.find('#Results').html("");
  scope.find("#infinite").text("Reloading...");
  recipeAjaxd = 0;
  getPopularRecipes(recipeAjaxd);
};

menuAjaxd = 0;

loadPopularMenus = function() {
  var scope;
  scope = $('#main_Popular_Menus');
  scope.find('#Results').html("");
  scope.find("#infinite").text("Reloading...");
  menuAjaxd = 0;
  getPopularMenus(menuAjaxd);
};

findChosenRecipeId = function() {
  var recipeSelectedId;
  recipeSelectedId = [];
  $('#main_Kitchen_Recipes').find('.chosen').forEach(function(elem) {
    return recipeSelectedId.push(elem.getAttribute('data-recipe-id'));
  });
  console.log(recipeSelectedId);
  return recipeSelectedId;
};

createNewMenu = function(recipeIds, listTitle, isPrivate) {
  var data;
  console.log("create new menu for #" + recipeIds + " with title=" + listTitle + " and privacy=" + isPrivate);
  data = {
    list_name: listTitle,
    description: "",
    privacy: isPrivate,
    recipes: recipeIds,
    user_id: window.user_id,
    token: window.token
  };
  data = JSON.stringify(data);
  console.log(data);
  $.ajax({
    type: 'POST',
    url: 'http://54.178.135.71:8080/CookIEServer/recipelist',
    dataType: 'application/json',
    data: data,
    timeout: 10000,
    success: function(data) {
      var newId;
      data = JSON.parse(data);
      console.log("[SUCCESS] new list " + listTitle + " for recipes " + recipeIds);
      console.log(data);
      newId = data.new_id;
      alert("Menu " + listTitle + " successfully created");
      resetSelectedRecipe();

      /* add this newly created menu to kitchen */
      console.log("secretly add this new list to kitchen");
      data = {
        user_id: window.user_id,
        token: window.token,
        type: 'list',
        list_id: newId
      };
      data = JSON.stringify(data);
      $.ajax({
        type: 'POST',
        url: 'http://54.178.135.71:8080/CookIEServer/favorite',
        contentType: 'application/json',
        data: data,
        timeout: 10000,
        success: function(data) {
          console.log("[SUCCESS] add menu #" + newId + " to kitchen");
          console.log(data);
          reloadKitchenMenus();
        },
        error: function(resp) {
          console.log("[ERROR] add menu #" + newId + " to kitchen");
          console.log(resp);
        }
      });
    },
    error: function(data, status) {
      console.log("[ERROR] new list " + listTitle + " for recipes " + recipeIds);
      console.log(data);
    }
  });
};

addThisRecipeToKitchen = function() {
  var data, recipeId;
  recipeId = $('#RecipeContent').find('#RecipeImg').attr('data-recipe-id');
  console.log("add " + recipeId + " to kitchen");
  data = {
    user_id: window.user_id,
    token: window.token,
    type: 'recipe',
    recipe_id: recipeId
  };
  data = JSON.stringify(data);
  $.ajax({
    type: 'POST',
    url: 'http://54.178.135.71:8080/CookIEServer/favorite',
    contentType: 'application/json',
    data: data,
    timeout: 10000,
    success: function(data) {
      console.log("[SUCCESS] add " + recipeId + " to kitchen");
      console.log(data);
      alert("Done!");
      reloadKitchenRecipes();
    },
    error: function(resp) {
      console.log("[ERROR] add " + recipeId + " to kitchen");
      console.log(resp);
      if (resp.status === 404) {
        alert("Oops! The recipe is already in Kitchen!");
      }
    }
  });
};

addThisMenuToKitchen = function() {
  var data, menuId;
  menuId = $('#MenuContent').find('.menuContent_imgHolder').attr('data-menu-id');
  console.log("add menu #" + menuId + " to kitchen");
  data = {
    user_id: window.user_id,
    token: window.token,
    type: 'list',
    list_id: menuId
  };
  data = JSON.stringify(data);
  $.ajax({
    type: 'POST',
    url: 'http://54.178.135.71:8080/CookIEServer/favorite',
    contentType: 'application/json',
    data: data,
    timeout: 10000,
    success: function(data) {
      console.log("[SUCCESS] add menu #" + menuId + " to kitchen");
      console.log(data);
      alert("Done!");
      reloadKitchenMenus();
    },
    error: function(resp) {
      console.log("[ERROR] add menu #" + menuId + " to kitchen");
      console.log(resp);
      if (resp.status === 404) {
        alert("Oops! The menu is already in Kitchen!");
      }
    }
  });
};

resetSelectedRecipe = function() {
  $('#main_Kitchen_Recipes').find('.chosen').removeClass('chosen');
};

parseTimeToMinutes = function(time) {
  time = time.split(":");
  return time = parseInt(time[0]) * 60 + parseInt(time[1]) + parseInt(time[2]) / 60;
};

convertTimeToSeconds = function(time) {
  time = time.split(":");
  return time = parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2]);
};

parseSecondsToTime = function(seconds) {
  var hour, min;
  hour = Math.floor(seconds / 3600);
  seconds %= 3600;
  hour = hour < 10 ? "0" + hour : hour;
  min = Math.floor(seconds / 60);
  seconds %= 60;
  min = min < 10 ? "0" + min : min;
  seconds = seconds < 10 ? "0" + seconds : seconds;
  return "" + hour + ":" + min + ":" + seconds;
};
